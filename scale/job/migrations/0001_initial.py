# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.db.models.deletion
import util.deprecation


class Migration(migrations.Migration):

    dependencies = [
        ('trigger', '0001_initial'),
        ('error', '0001_initial'),
        ('node', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default='BLOCKED', max_length=50, db_index=True, choices=[('BLOCKED', 'BLOCKED'), ('QUEUED', 'QUEUED'), ('RUNNING', 'RUNNING'), ('FAILED', 'FAILED'), ('COMPLETED', 'COMPLETED'), ('CANCELED', 'CANCELED')])),
                ('data', util.deprecation.JSONStringField(default={}, null=True, blank=True)),
                ('results', util.deprecation.JSONStringField(default={}, null=True, blank=True)),
                ('priority', models.IntegerField()),
                ('timeout', models.IntegerField()),
                ('max_tries', models.IntegerField()),
                ('num_exes', models.IntegerField(default=0)),
                ('cpus_required', models.FloatField(null=True, blank=True)),
                ('mem_required', models.FloatField(null=True, blank=True)),
                ('disk_in_required', models.FloatField(null=True, blank=True)),
                ('disk_out_required', models.FloatField(null=True, blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('queued', models.DateTimeField(null=True, blank=True)),
                ('started', models.DateTimeField(null=True, blank=True)),
                ('ended', models.DateTimeField(null=True, blank=True)),
                ('last_status_change', models.DateTimeField(null=True, blank=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('error', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, blank=True, to='error.Error', null=True)),
                ('event', models.ForeignKey(to='trigger.TriggerEvent', on_delete=django.db.models.deletion.PROTECT)),
            ],
            options={
                'db_table': 'job',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='JobExecution',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default='QUEUED', max_length=50, db_index=True, choices=[('QUEUED', 'QUEUED'), ('RUNNING', 'RUNNING'), ('FAILED', 'FAILED'), ('COMPLETED', 'COMPLETED'), ('CANCELED', 'CANCELED')])),
                ('command_arguments', models.CharField(max_length=1000)),
                ('timeout', models.IntegerField()),
                ('environment', util.deprecation.JSONStringField(default={}, null=True, blank=True)),
                ('cpus_scheduled', models.FloatField(null=True, blank=True)),
                ('mem_scheduled', models.FloatField(null=True, blank=True)),
                ('disk_in_scheduled', models.FloatField(null=True, blank=True)),
                ('disk_out_scheduled', models.FloatField(null=True, blank=True)),
                ('disk_total_scheduled', models.FloatField(null=True, blank=True)),
                ('requires_cleanup', models.BooleanField(default=False, db_index=True)),
                ('pre_started', models.DateTimeField(null=True, blank=True)),
                ('pre_completed', models.DateTimeField(null=True, blank=True)),
                ('pre_exit_code', models.IntegerField(null=True, blank=True)),
                ('job_started', models.DateTimeField(null=True, blank=True)),
                ('job_completed', models.DateTimeField(null=True, blank=True)),
                ('job_exit_code', models.IntegerField(null=True, blank=True)),
                ('post_started', models.DateTimeField(null=True, blank=True)),
                ('post_completed', models.DateTimeField(null=True, blank=True)),
                ('post_exit_code', models.IntegerField(null=True, blank=True)),
                ('stdout', models.TextField(null=True, blank=True)),
                ('stderr', models.TextField(null=True, blank=True)),
                ('current_stdout_url', models.URLField(max_length=600, null=True)),
                ('current_stderr_url', models.URLField(max_length=600, null=True)),
                ('results_manifest', util.deprecation.JSONStringField(default={}, null=True, blank=True)),
                ('results', util.deprecation.JSONStringField(default={}, null=True, blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('queued', models.DateTimeField()),
                ('started', models.DateTimeField(null=True, blank=True)),
                ('ended', models.DateTimeField(null=True, blank=True)),
                ('cleaned_up', models.DateTimeField(null=True, blank=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('cleanup_job', models.ForeignKey(related_name='cleans', on_delete=django.db.models.deletion.PROTECT, blank=True, to='job.Job', null=True)),
                ('error', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, blank=True, to='error.Error', null=True)),
                ('job', models.ForeignKey(to='job.Job', on_delete=django.db.models.deletion.PROTECT)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, blank=True, to='node.Node', null=True)),
            ],
            options={
                'db_table': 'job_exe',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='JobType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50, db_index=True)),
                ('version', models.CharField(max_length=50, db_index=True)),
                ('title', models.CharField(max_length=50, null=True, blank=True)),
                ('category', models.CharField(db_index=True, max_length=50, null=True, blank=True)),
                ('description', models.CharField(max_length=500, blank=True)),
                ('author_name', models.CharField(max_length=50, null=True, blank=True)),
                ('author_url', models.CharField(max_length=100, null=True, blank=True)),
                ('is_system', models.BooleanField(default=False)),
                ('is_long_running', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_operational', models.BooleanField(default=True)),
                ('is_paused', models.BooleanField(default=False)),
                ('requires_cleanup', models.BooleanField(default=True)),
                ('uses_docker', models.BooleanField(default=True)),
                ('docker_privileged', models.BooleanField(default=False)),
                ('docker_image', models.CharField(max_length=500, null=True, blank=True)),
                ('interface', util.deprecation.JSONStringField(default={}, null=True, blank=True)),
                ('error_mapping', util.deprecation.JSONStringField(default={}, null=True, blank=True)),
                ('priority', models.IntegerField()),
                ('timeout', models.IntegerField()),
                ('max_tries', models.IntegerField()),
                ('cpus_required', models.FloatField(default=1.0)),
                ('mem_required', models.FloatField(default=64.0)),
                ('disk_out_const_required', models.FloatField(default=64.0)),
                ('disk_out_mult_required', models.FloatField(default=0.0)),
                ('icon_code', models.CharField(max_length=20, null=True, blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('archived', models.DateTimeField(null=True, blank=True)),
                ('paused', models.DateTimeField(null=True, blank=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'job_type',
            },
            bases=(models.Model,),
        ),
        migrations.AlterUniqueTogether(
            name='jobtype',
            unique_together=set([('name', 'version')]),
        ),
        migrations.AddField(
            model_name='job',
            name='job_type',
            field=models.ForeignKey(to='job.JobType', on_delete=django.db.models.deletion.PROTECT),
            preserve_default=True,
        ),
    ]
